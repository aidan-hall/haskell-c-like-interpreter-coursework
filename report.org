#+latex_header: \usepackage[margin=2cm]{geometry}
#+options: toc:nil
* Introduction
After consideration, I will try to implement a parser and interpreter
for a simple C-style language. This will be decently easy to parse,
but will present more complexity than something like Lisp[fn:1] or Forth.

I will use the BNF grammar file used in the [[https://warwick.ac.uk/fac/sci/dcs/teaching/material/cs325/][CS325]] coursework, which
describes the syntax of a language called ‘Mini-C’, as a basis for my
syntax.  It will be interesting to see if Haskell will allow me to do
in 3 days what would take a third-year 3 months with C[fn:2].

Necessary simplifications may include all variables being integers.

** Maths Expressions

#+latex_export: \pagebreak
* Technology & Resources
These are resources I may have used for this coursework.
- [[https://github.com/mrkkrp/megaparsec][Megaparsec]], a monadic parsing library.
- [[https://markkarpov.com/tutorial/megaparsec.html][Megaparsec Tutorial]].
- This [[https://mmhaskell.com/parsing/megaparsec][Monday Morning Haskell post]].
- [[https://www.itu.dk/people/sestoft/plc/][Programming Language Concepts]], by Peter Sestoft.
- [[https://suif.stanford.edu/dragonbook/][Compilers: Principles, Techniques, and Tools]], by Aho et al.
- [[https://craftinginterpreters.com/][Crafting Interpreters]], by Robert Nystrom.
- [[http://learnyouahaskell.com/chapters][Learn You a Haskell for Great Good!]], by Miran Lipovača.
- Yorkshire Tea (the most important one).
* Footnotes
[fn:2] Probably not.

[fn:1] Though it saddens my inner lisper.
